create table muser(
id int,
reg_num varchar2(8) not null,
name varchar2(10 char),
grade int,
salary int,
time int);

create sequence muser_no
increment by 1
start with 10
;

insert into muser values(muser_no.nextval,'870205-1','이승진',1,10000,34);
insert into muser values(muser_no.nextval,'880405-1','박이진',2,20000,31);
insert into muser values(muser_no.nextval,'770715-2','최이수',4,40000,32);
insert into muser values(muser_no.nextval,'010205-3','류진아',1,10000,30);
insert into muser values(muser_no.nextval,'810205-2','오현식',2,20000,34);
insert into muser values(muser_no.nextval,'820219-2','정승우',3,30000,35);
insert into muser values(muser_no.nextval,'020205-3','이재수',1,10000,30);
insert into muser values(muser_no.nextval,'970214-2','박지영',2,20000,31);
insert into muser values(muser_no.nextval,'040205-4','정은아',4,40000,31);
insert into muser values(muser_no.nextval,'770225-1','정재영',5,50000,30);
insert into muser values(muser_no.nextval,'770905-2','이신수',4,40000,34);
insert into muser values(muser_no.nextval,'050208-3','이발끈',2,20000,30);
insert into muser values(muser_no.nextval,'051205-4','이욱이',1,10000,34);
insert into muser values(muser_no.nextval,'891215-1','지승아',3,30000,30);
insert into muser values(muser_no.nextval,'670805-1','현진수',2,20000,34);
insert into muser values(muser_no.nextval,'840207-1','최이런',1,10000,35);
insert into muser values(muser_no.nextval,'770405-1','이천안',1,10000,31);


1 grade가 3인 사람은 모두 몇명인가요?
select count(*) from muser where grade = 3;

2 grade가 1,2,4인 사람들의 salary의 평균을 구하시오.
select avg(salary) from muser where grade in (1,2,4);

3 salary가 20000 미만인 사람은 총 몇명입니까?
select count(*) from muser where salary < 20000;

4 salary가 30000 이상인 사람의 salary 평균을 구하시오.
select avg(salary) from muser where salary >= 30000;

5 77년생중에  salary가 가장 적은 사람의 이름과 나이와 salary를 출력하시오.
select name, (trunc(MONTHS_BETWEEN(sysdate, to_date(substr(reg_num,1,6)))/12)) age, salary from muser where salary = (
select min(salary) from muser where substr(reg_num,1,2) = '77' ) and substr(reg_num,1,2) = '77';

*나이 계산방법 2가지 안
SELECT name, reg_num, 
	(trunc(MONTHS_BETWEEN(sysdate, to_date(substr(reg_num,1,6)))/12)) age, 
	EXTRACT(YEAR FROM SYSDATE) -  (DECODE(SUBSTR(reg_num,8,1),'1', '19','2','19','20') || SUBSTR(reg_num,1,2)) as "현재나이" 
from muser;
참고
select months_between('2024/09/04', '1977/09/05')/12 from dual;
select months_between('2024/09/04', '77/09/05')/12 from dual;
또는
select a.name 이름, substr(a.reg_num,1,6) 생년, x.min_salary
from muser a, (select substr(reg_num,1,2) age, min(salary) min_salary from muser group by  substr(reg_num,1,2) ) x
where substr(a.reg_num,1,2) = x.age
and a.salary = x.min_salary
and x.age = '77';

6 모든 사람의 이름과, 생일(월과 일 예를들어 0205)를 출력하시오.
select name 이름, substr(reg_num,3,4) 생일 from muser;

7 남자의 평균 급여를 구하시오.
select avg(salary) from muser where substr(reg_num,8,1) in (1,3);

8 전체 평균급여보다 높은 급여를 받는 사람의 이름과, 급여를 출력하시오
select name, salary from muser where salary > (select avg(salary) from muser);

9 전체 평균급여보다 높은 급여를 받는 사람의 이름과, 급여, 전체평균급여를 출력하시오
select name, salary, round((select avg(salary) from muser),2) 평균급여 
from muser 
where salary > (select avg(salary) from muser);

10 여직원의 평균급여보다 높은 남자직원은 모두 몇명입니까
select count(*) from muser 
where substr(reg_num,8,1) in (1,2) 
and salary > (select avg(salary) from muser where substr(reg_num,8,1) in (2,4));

11 grade별 평균 급여를 출력하세요.
select grade, avg(salary) from muser group by grade order by grade;

12 그룹별 평균급여가 전체 평균보다 높은 그룹을 출력하시오.
select grade, avg(salary) from muser 
group by grade having avg(salary) > (select avg(salary) from muser)
order by grade;

13 직원들의 월급 명세서를 출력하시오. (출력 형태는 이름, 월급(grade*salary*time)
select name 이름, (grade*salary*time) 월급 from muser;

14 직원들의 성별을 출력하시오. (출력 형태 이름, 성별(성별은 남또는 여로 출력한다)
select name 이름, case substr(reg_num,8,1) when '1' then '남' when '2' then '여' when '3' then '남' when '4' then '여' end as 성별
from muser;
또는
select name 이름, translate(substr(reg_num,8,1),'1234','남여남여') as 성별 from muser;
또는
select name 이름, decode(substr(reg_num,8,1), '1','남','2','여','3','남','4','여') 성별 from muser;

15 time은 근무시간이 근무시간이 31이상인 사람의 이름을 출력하시오.
select name 이름, time 근무시간 from muser where time > 31 order by name;

16 짝수년도에 태어난 사람들의 이름을 모두 출력하세요.
select name 이름, substr(reg_num,1,2) 출생년도 from muser where mod(to_number(substr(reg_num,1,2)),2) =0;

17 직원들의 생년월일을 출력하시오. (출력 형태는 이름과 생년월일(97년1월2일))
select name 이름,  substr(reg_num,1,2) ||'년' || replace(substr(reg_num,3,2),'0',' ') || '월' || replace(substr(reg_num,5,2),'0',' ') || '일' as 생년월일 from muser;
또는
select to_char(to_date(substr(reg_num,1,6)), 'YY"년"MM"월"DD"일"') reg_num from muser;

18 여직원들의 육아를 지원하기 위한 정책으로 time을 2시간 가산하기로 했다. 이를 처리 하시오.
select name 이름, (case substr(reg_num,8,1) when '2' then time+2 when '4' then time+2 else time end) 작업시간 from muser;

19 나이별 인원수는 몇명입니까
select substr(reg_num,1,2) , count(*) from muser group by substr(reg_num,1,2);
또는 05년생이 생일여부에 따라서 나이가 달라짐.
select (trunc(MONTHS_BETWEEN(sysdate, to_date(substr(reg_num,1,6)))/12)) age, count(*) from muser group by trunc(MONTHS_BETWEEN(sysdate, to_date(substr(reg_num,1,6)))/12);


20 2학년그룹과 4학년 그룹은 모두 몇명입니까
select grade, count(grade) from muser group by grade having grade in (2,4);

추가문제

#1) 모든 사람이 태어난 후 오늘까지 몇 달이 지났는지 출력하시오
(출력형태: 이름, 주민번호, 지금까지살아온월수)
select name 이름, reg_num 주민번호, trunc(MONTHS_BETWEEN(sysdate, to_date(substr(reg_num,1,6)))) 살아온월수 from muser;

#2) time을 나이로 봄. 30~31세의 살아온 월수의 합, 32세 이상의 살아온 월수의 합 구하기
select sum(z.mm_30sum), sum(z.mm_31sum)
from (
select sum(x.mm) mm_30sum, 0 mm_31sum
from (select name , (time *12) age_mm ,trunc(MONTHS_BETWEEN(sysdate, to_date(substr(reg_num,1,6)))) mm from muser where time between 30 and 31) x
union all
select 0 mm_30sum, sum(y.mm) mm_31sum
from (select name , (time *12) age_mm , trunc(MONTHS_BETWEEN(sysdate, to_date(substr(reg_num,1,6)))) mm from muser where time >= 32) y
) z;


#3) 연령별 급여의 합, over()함수 이용
select time 나이, sum(salary) from muser group by time order by time;
또는
select name, time 나이, salary, sum(salary) over( partition by time) from muser order by time;

#4) 연령별 인원수, over()함수 이용
select time 나이, count(*) from muser group by time order by time;
또는
select distinct time 나이, count(*) over( partition by time) from muser order by time;

#5) 등급별 급여의 최고급여, over()함수 이용
select grade, max(salary) from muser group by grade order by grade;
또는
select distinct grade, max(salary) over( partition by grade) from muser order by grade;

#6) 구글검색하여 오라클 함수 정리
1.문자데이터를 가공하는 문자 함수
   1) UPPER,LOWER,INITCAP 함수(대소문자 변환)
   2) LENGTH 함수(문자열 길이 추출)
   3) SUBSTR 함수(문자열 일부 추출)
   4) INSTR 함수(문자열 위치 확인)
   5) REPLACE 함수 - 특정 문자를 다른 문자로 바꾸는 함수
   6) LPAD,RPAD함수 - 데이터 빈 공간을 특정 문자로 채우는 함수
   7) CONCAT or || 함수 - 두 개의 문자열 데이터를 하나의 데이터로 연결해주는 역할
   8) TRIM, LTRM, RTRIM 함수 - 문자열 데이터 내에서 특정 문자 지우기 위해 사용
2.숫자 함수
   1) ROUND - 지정된 숫자의 특정 위치에서 반올림한 값 반환
   2) TRUNC - 지정된 숫자의 특정 위치에서 버림한 값을 반환
   3) CEIL - 지정된 숫자보다 큰 정수 중 가장 작은 정수를 반환
   4) FLOOR - 지정된 숫자보다 작은 정수 중 가장 큰 정수를 반환
   5) MOD - 지정된 숫자를 나눈 나머지값 반환
3.날짜 함수
   1) SYSDATE - 구현방식: SYSDATE-1 AS YESTERDAY / (기준날짜데이터명)-1 AS (신규데이터명)
   2) ADD_MONTHS 함수 - 특정 날짜에 지정한 개월 수 이후 날짜 데이터 반환
   3) MONTHS_BETWEEN 함수 - 두 개의 날짜 데이터 입력한 후, 두 날짜 간 개월 수 차이 구하는 함수
   4) NEXT_DAY, LAST_DAY 함수 (NEXT_DAY - 입력한 날자데이터에서 돌아오는 요일의 날짜 반환)
                                         (LAST_DAY - 날짜 데이터 입력하여 해당 날짜가 속한 달의 마지막 날짜 반환)
   5) 날짜 반올림 버림하는 ROUND, TRUNC  함수 - 반올림 및 버림 기준이 될 포맷값을 지정함
