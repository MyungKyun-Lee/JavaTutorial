정리질문(24.11.06)
1. 클라이언트가 request를 할 때 공부해야 하는 것 3가지
　- url : 요청할 웹 주소
　- method : 파라미터를 어떤 방식으로 넘겨줄 것인지 정의
　- parameter : 서버에게 전송할 데이터, 요청 시 넘겨주는 것

2. url을 구성하는 각 부분을 설명
　- 예시) http://localhost:8080/hom/
　- http : 프로토콜
　- localhost 또는 IP주소 : 서버주소
　- 8080 : 포트번호(Port)
　- hom : 컨텍스트 패스(Context Path)
　- / 뒤에 오는 값 : value

3. 스프링에서 @Controller의 의미
　- 클라이언트의 요청(request) 처리를 위한 컨트롤러를 지정

4. 스프링에서 @RequestMapping의 의미
　- 클라이언트가 요청(request), 클라이언트가 무엇을 필요로 하는지 분석

5. 스프링 컨트롤러에서 return 다음에 오는 문자열의 의미
　- 요청(request)에 따른 응답(response), 응답하는 파일면
　- 파일명 뒤에 .jsp가 생략되어 있다. (파일명.jsp)

6. Maven Spring의 디렉토리 구조
　- Maven Spring 프로젝트 폴더
　- Java 소스 위치 : → src/main/java → www.silver.hom → HomeController.java
　- 정적 컨텐츠 위치 : → src → main → webapp → resources
　- View 파일 위치 : → src → main → webapp → WEB-INF → view (파일명.jsp)
　- 설정 파일 위치 : → src → main → webapp → WEB-INF → spring 및 web.xml
　- Maven 설정 파일 위치 : → pom.xml
　- Mybatis 설정 파일 위치 : → src/main/resources

7. 이미지나 정적컨텐츠의 위치
　- 정적 컨텐츠 위치 : Maven Spring 프로젝트 폴더 → src → main → webapp → resources
　- 이미지 설정 시 img태그의 src에 정적 위치를 지정해야한다.
　- 컨텍스트 패스(Context Path)지정 시 src에 <%=request.getContextPath()%>를 적어준다.
　- 예시) <img src="<%=request.getContextPath()%>/resources/img/이미지.jpg">

8. 스프링에서 한글을 설정하는 방법 3가지
　- Spring 내에서 상단의 Window → Preferences 클릭 후
	→ Web → CSS Files / HTML Files / JSP Files 의 Encoding을 UTF-8로 변경
	→ General → Workspace 의 Text file encoding 설정을 Other UTF-8로 변경
　- web.xml에 인코딩 필터를 추가한다.
	: Maven Spring 프로젝트 폴더 → src → main → webapp → WEB-INF → web.xml 파일 내에 추가
	<filter>
		<filter-name>encoding-filter</filter-name> 
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> 
		<init-param> 
			<param-name>encoding</param-name> 
			<param-value>UTF-8</param-value> 
		</init-param> 
	</filter> 
	<filter-mapping> 
		<filter-name>encoding-filter</filter-name> 
		<url-pattern>/*</url-pattern> 
	</filter-mapping>
　- JSP파일 내에 UTF-8 meta태그 및 page태그를 추가한다.
	: Maven Spring 프로젝트 폴더 → src → main → webapp → WEB-INF → views → jsp 파일 내에 추가
	<%@ page language="java" contentType="text/html; charset=utf-8" pageEncoding="utf-8"%>
	<head>태그 내에 <meta charset="UTF-8">

9. 컨텍스트패스의 의미
　- Spring 프로젝트를 만들면 초기 컨텍스트 패스(Context Path)는 hom으로 설정되어 있다.
　- 클라이언트의 요청(request)이 있을 때 해당 서비스가 무엇인지를 정의한다.
　- 여러개의 Spring 프로젝트가 있을 때 해당 컨텍스트 패스(Context Path)로 구분한다.
　- Servers → Tomcat 폴더 → server.xml 내 제일 하단에 <Context>태그를 통해 확인할 수 있다.

10. 클라이언트에서 GET 방식으로 request를 발생하는 방법 2가지
　- parameter 없이 요청(request)하는 방식 (예 : 음식 주문)
	예시) http://localhost:8080/hom/
　- parameter를 넘겨주며 요청(request)하는 방식 (예 : 음식 결제)
	예시) http://localhost:8080/hom/?name="이름"&id="아이디"
　- 단, parameter를 포함하여 GET 방식으로 요청하는 경우에는 보안에 취약하다는 단점이 있다. (url에 넘겨주는 파라미터 정보가 그대로 표시된다.)


+ 추가 이론
DNS, IP, Port
　- IP : 컴퓨터의 고유 주소, 웹 서버 실행 시 서버의 고유 주소
　- DNS : IP주소를 사람이 읽을 수 있도록 도메인 이름으로 변환한 주소, IP주소를 변환한 것이기에 도메인 주소를 사용해도 웹 서버에 접속할 수 있다.
　- Port : 프로그램의 주소, 서버에 접속 할 때 원하는 서버에 연결하기 위한 주소

RestAPI
　- 서버로부터 CRUD 작업을 하기 위해 HTTP mothod를 통해 CRUD 방식을 사용한다.
　- C : POST / R : GET / U : PUT / D : DELETE

Web Server와 WAS
　- Client가 Server에 요청(request) 시 Server에서 처리하는 작업
　- Web Server : 정적 컨텐츠 서비스를 제공한다.
	: 첨부파일, 정적문서(html, css, js)
　- WAS : Web Application Server : 동적 컨텐츠 서비스를 제공한다.
	: DB 작업이 필요한 경우
	: 어떤 컨텐츠 서비스가 필요한지 url을 보고 판단한다. (Client의 요청(request)을 보고 판단한다.)
	: 컨텍스트 패스(Context Path)를 보고 서비스 연결 여부를 판단한다.

View Template
　- 사용자의 요청에 따라 웹 페이지를 보여주기 위해 웹 페이지를 생성하는 역할을 한다.
　- Spring에서는 JSP 파일을 사용한다.
　- JSP 파일을 렌더링하기 위해 Java언어를 가지고 View Template을 만든다?

